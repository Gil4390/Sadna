// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SadnaExpress.DataLayer;

namespace SadnaExpress.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230612191216_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SadnaExpress.DomainLayer.Notification", b =>
                {
                    b.Property<Guid>("NotificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Read")
                        .HasColumnType("bit");

                    b.Property<Guid>("SentFrom")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SentTo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("NotificationID");

                    b.ToTable("notfications");
                });

            modelBuilder.Entity("SadnaExpress.DomainLayer.Store.Inventory", b =>
                {
                    b.Property<Guid>("InventoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Items_quantityDB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StoreID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("InventoryID");

                    b.HasIndex("StoreID")
                        .IsUnique();

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("SadnaExpress.DomainLayer.Store.Item", b =>
                {
                    b.Property<Guid>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InventoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("ItemID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("SadnaExpress.DomainLayer.Store.ItemForOrder", b =>
                {
                    b.Property<Guid>("ItemForOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ItemID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid>("StoreID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemForOrderId");

                    b.ToTable("ItemForOrders");
                });

            modelBuilder.Entity("SadnaExpress.DomainLayer.Store.Order", b =>
                {
                    b.Property<Guid>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ListItemsDB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderID");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("SadnaExpress.DomainLayer.Store.Policy.ConditionDB", b =>
                {
                    b.Property<Guid>("UniqueID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Dt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityStr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Op")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OpCond")
                        .HasColumnType("int");

                    b.Property<Guid>("StoreID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UniqueID");

                    b.ToTable("conditions");
                });

            modelBuilder.Entity("SadnaExpress.DomainLayer.Store.Policy.PolicyDB", b =>
                {
                    b.Property<Guid>("UniqueID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("activated")
                        .HasColumnType("bit");

                    b.Property<string>("complex_op")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("complex_policys")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("simple_endDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("simple_level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("simple_percent")
                        .HasColumnType("int");

                    b.Property<DateTime>("simple_startDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UniqueID");

                    b.ToTable("policies");
                });

            modelBuilder.Entity("SadnaExpress.DomainLayer.Store.Review", b =>
                {
                    b.Property<Guid>("ReviewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReviewText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReviewerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StoreID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ReviewID");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("SadnaExpress.DomainLayer.Store.ShoppingBasket", b =>
                {
                    b.Property<Guid>("ShoppingBasketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemInBasketDB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ShoppingCartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StoreID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ShoppingBasketId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("shoppingBaskets");
                });

            modelBuilder.Entity("SadnaExpress.DomainLayer.Store.ShoppingCart", b =>
                {
                    b.Property<Guid>("ShoppingCartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ShoppingCartId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("shoppingCarts");
                });

            modelBuilder.Entity("SadnaExpress.DomainLayer.Store.Store", b =>
                {
                    b.Property<Guid>("StoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("DiscountPolicyCounter")
                        .HasColumnType("int");

                    b.Property<int>("PurchasePolicyCounter")
                        .HasColumnType("int");

                    b.Property<string>("StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoreRating")
                        .HasColumnType("int");

                    b.HasKey("StoreID");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("SadnaExpress.DomainLayer.User.Bid", b =>
                {
                    b.Property<Guid>("BidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DecisionDB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ItemID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OpenBid")
                        .HasColumnType("bit");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("StoreID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BidId");

                    b.ToTable("bids");
                });

            modelBuilder.Entity("SadnaExpress.DomainLayer.User.InitializeSystem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsInit")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("initializeSystems");
                });

            modelBuilder.Entity("SadnaExpress.DomainLayer.User.Macs", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("mac")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("macs");
                });

            modelBuilder.Entity("SadnaExpress.DomainLayer.User.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BidsDB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("SadnaExpress.DomainLayer.User.Visit", b =>
                {
                    b.Property<Guid>("UniqueID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VisitDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UniqueID");

                    b.ToTable("visits");
                });

            modelBuilder.Entity("SadnaExpress.DomainLayer.User.Member", b =>
                {
                    b.HasBaseType("SadnaExpress.DomainLayer.User.User");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LoggedIn")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityQuestionsDB")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Member");
                });

            modelBuilder.Entity("SadnaExpress.DomainLayer.User.PromotedMember", b =>
                {
                    b.HasBaseType("SadnaExpress.DomainLayer.User.Member");

                    b.Property<string>("AppointDB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BidsOffersDB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectSupervisorDB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermissionDB")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("PromotedMember");
                });

            modelBuilder.Entity("SadnaExpress.DomainLayer.Store.Inventory", b =>
                {
                    b.HasOne("SadnaExpress.DomainLayer.Store.Store", null)
                        .WithOne("itemsInventory")
                        .HasForeignKey("SadnaExpress.DomainLayer.Store.Inventory", "StoreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SadnaExpress.DomainLayer.Store.ShoppingBasket", b =>
                {
                    b.HasOne("SadnaExpress.DomainLayer.Store.ShoppingCart", null)
                        .WithMany("Baskets")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SadnaExpress.DomainLayer.Store.ShoppingCart", b =>
                {
                    b.HasOne("SadnaExpress.DomainLayer.User.User", null)
                        .WithOne("ShoppingCart")
                        .HasForeignKey("SadnaExpress.DomainLayer.Store.ShoppingCart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
